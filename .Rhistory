View(data)
modelo1= lm(porpobre ~redpublica + poblacienmil , data=data)
summary(modelo1)
reg1= lm(modelo1, data = data)
stargazer(reg1, type = "text",intercept.bottom = FALSE, style="all2")
stargazer(reg1, type = "html",intercept.bottom = FALSE, style="all2")
reg1= lm(modelo1, data = data)
stargazer(reg1, type = "html",intercept.bottom = FALSE, style="all2")
library(rio)
library(ggplot2) #para hacer gráficos
library(Hmisc)   #para correlación
library(nortest)
library(lm.beta)
library(car)
data="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos.xlsx?raw=true"
data= import(data)
library(rio)
library(ggplot2) #para hacer gráficos
library(Hmisc)   #para correlación
library(nortest)
library(lm.beta)
library(car)
data="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos.xlsx?raw=true"
data= import(data)
str(data)
names(data)
data$poblacienmil= as.numeric(data$poblacienmil)
library(stringr)
data[1,2]
data$Codigo= stringr::str_pad(data$Codigo, 6, side = "left", pad =0)
head(data)
modelo1= lm(porpobre ~redpublica + poblacienmil , data=data)
summary(modelo1)
reg1= lm(modelo1, data = data)
stargazer(reg1, type = "html",intercept.bottom = FALSE, style="all2")
reg1= lm(modelo1, data = data)
stargazer(reg1, type = "html",intercept.bottom = FALSE, style="all2")
library(stargazer)
reg1= lm(modelo1, data = data)
stargazer(reg1, type = "html",intercept.bottom = FALSE, style="all2")
modelo2= lm(porpobre ~redpublica + leña + poblacienmil , data=data)
summary(modelo2)
reg2= lm(modelo2, data = data)
stargazer(reg2, type = "html",intercept.bottom = FALSE, style= "all2")
tanova= anova(reg1, reg2)
stargazer(tanova,type='html',summary = F,title = "Table de Análisis de Varianza")
stargazer(modelo1,modelo2, type ="text")
plot(modelo2, 1)
plot(modelo2, 3)
library(lmtest)
bptest(modelo2)
plot(modelo2, 2)
shapiro.test(modelo2$residuals)
VIF(modelo2) # > 5 es problematico(retirarlo del estudio)
library(DescTools)
VIF(modelo2) # > 5 es problematico(retirarlo del estudio)
plot(modelo2, 5)
checkmodelo2=as.data.frame(influence.measures(modelo2)$is.inf)
head(checkmodelo2)
checkmodelo2[checkmodelo2$cook.d & checkmodelo2$hat,]
modelo1= formula(porpobre ~redpublica + poblacienmil)
summary(modelo1)
modelo1= formula(porpobre ~redpublica + poblacienmil)
summary(modelo1)
data="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos.xlsx?raw=true"
data= import(data)
data$poblacienmil= as.numeric(data$poblacienmil)
library(stringr)
data[1,2]
data$Codigo= stringr::str_pad(data$Codigo, 6, side = "left", pad =0)
head(data)
modelo1= formula(porpobre ~redpublica + poblacienmil)
summary(modelo1)
library(rio)
library(ggplot2) #para hacer gráficos
library(Hmisc)   #para correlación
library(nortest)
library(lm.beta)
library(car)
modelo1= formula(porpobre ~redpublica + poblacienmil)
summary(modelo1)
modelo1= lm(porpobre ~redpublica + poblacienmil, data = data)
summary(modelo1)
library(stargazer)
reg1= lm(modelo1, data = data)
stargazer(reg1, type = "html",intercept.bottom = FALSE, style="all2")
modelo2= lm(porpobre ~redpublica + leña + poblacienmil , data=data)
summary(modelo2)
reg2= lm(modelo2, data = data)
stargazer(reg2, type = "html",intercept.bottom = FALSE, style= "all2")
setwd("C:/Users/jazmi/OneDrive/Desktop/Estadistica 1 & 2/Estadistica 2/Trabajo grupal")
knitr::opts_chunk$set(echo = TRUE)
library(rio)
library(ggplot2) #para hacer gráficos
library(Hmisc)   #para correlación
library(nortest)
library(lm.beta)
library(car)
data="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos.xlsx?raw=true"
data= import(data)
data$poblacienmil= as.numeric(data$poblacienmil)
library(stringr)
data[1,2]
data$Codigo= stringr::str_pad(data$Codigo, 6, side = "left", pad =0)
head(data)
modelo1= lm(porpobre ~redpublica + poblacienmil, data = data)
summary(modelo1)
library(stargazer)
reg1= lm(modelo1, data = data)
stargazer(reg1, type = "html",intercept.bottom = FALSE, style="all2")
modelo2= lm(porpobre ~redpublica + leña + poblacienmil , data=data)
summary(modelo2)
reg2= lm(modelo2, data = data)
stargazer(reg2, type = "html",intercept.bottom = FALSE, style= "all2")
tanova= anova(reg1, reg2)
stargazer(tanova,type='html',summary = F,title = "Table de Análisis de Varianza")
stargazer(reg1,reg2, type ="text")
plot(reg2, 1)
plot(reg2, 3)
bptest(reg2)
library(lmtest)
bptest(reg2)
plot(reg2, 2)
shapiro.test(reg2$residuals)
VIF(reg2) # > 5 es problematico(retirarlo del estudio)
library(DescTools)
VIF(reg2) # > 5 es problematico(retirarlo del estudio)
plot(reg2, 5)
checkreg2=as.data.frame(influence.measures(reg2)$is.inf)
head(checkreg2)
checkreg2[checkreg2$cook.d & checkreg2$hat,]
shapiro.test(reg2$residuals)
View(data)
setwd("C:/Users/jazmi/OneDrive/Desktop/Estadistica 1 & 2/Estadistica 2/Trabajo grupal")
knitr::opts_chunk$set(echo = TRUE)
data2="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos_2.xlsx?raw=true"
data2= import(data2)
library(rio)
data="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos.xlsx?raw=true"
data= import(data)
data2="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos_2.xlsx?raw=true"
data2= import(data2)
View(data2)
boxplot(data2[,-1])
data2[,-1]=lapply(data2[,-1], parse_number)
library(readr)
data2[,-1]=lapply(data2[,-1], parse_number)
data2[,-1]=lapply(data2[,-1], parse_number)
library(readr)
data2[,-1]=lapply(data2[,-1], parse_number)
data2=lapply(data2, parse_number)
library(readr)
data2=lapply(data2, parse_number)
lapply(data2, parse_number)
boxplot(data2[,-1])
data2= as.numeric(data2)
data2= as.numeric(data2)
as.numeric(data2)
data2= lapply(data2, as.numeric)
boxplot(data2[,-1])
boxplot(data2)
View(data2)
View(data2)
View(data2)
View(data)
View(data2)
library(rio)
data2="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos_2.xlsx?raw=true"
data2= import(data2)
View(data2)
boxplot(data2)
data2= lapply(data2, as.numeric)
boxplot(data2)
View(data2)
library(rio)
data2="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos_2.xlsx?raw=true"
data2= import(data2)
data2= lapply(data2[,-1], as.numeric)
View(data2)
boxplot(data2)
boxplot(data2[,-1])
boxplot(data2)
library(rio)
data2="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos_2.xlsx?raw=true"
data2= import(data2)
data2[,-1]=lapply(data2[,-1], parse_number)
library(readr)
data2[,-1]=lapply(data2[,-1], parse_number)
View(data2)
data2=lapply(data2[,-1], parse_number)
data2=lapply(data2, parse_number)
library(readr)
data2=lapply(data2, parse_number)
library(rio)
data2="https://github.com/jazzz12/Trabajo-Grupal/blob/main/basededatos2.xlsx?raw=true"
data2= import(data2)
View(data2)
View(data)
str(data2)
library(readr)
allData[,-1]=lapply(allData[,-1], parse_number)
data2[,-1]=lapply(data2[,-1], parse_number)
data2= data2[,c(2,3,4,5,6,7)]
data2[,-1]=lapply(data2[,-1], parse_number)
library(readr)
data2= data2[,c(2,3,4,5,6,7)]
library(readr)
data2[,-1]=lapply(data2[,-1], parse_number)
str(data2)
setwd("C:/Users/jazmi/OneDrive/Desktop/Estadistica 1 & 2/Estadistica 2/Trabajo grupal")
setwd("C:/Users/jazmi/OneDrive/Desktop/Estadistica 1 & 2/Estadistica 2/Trabajo grupal")
data2= import("MiBaseDeDatos.xlsx")
View(data2)
setwd("C:/Users/jazmi/OneDrive/Desktop/Estadistica 1 & 2/Estadistica 2/Trabajo grupal")
data3= import("BD GP 7(1).xlsx")
data3= import("BD GP 7(1).xlsx")
data3= import("BD GP 7 (1).xlsx")
View(data3)
str(data2)
str(data3)
list(names(data), names(data2), names(data3))
keep=c(2,3)
data=data[,keep]
data2=data2[,keep]
data3=data3[,keep]
View(data)
keep1=c(2,3,4,5)
data="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos.xlsx?raw=true"
data= import(data)
keep1=c(2,3,4,5)
data=data[,keep1]
keep2= c(2,3)
data2=data2[,keep2]
View(data2)
data2= import("MiBaseDeDatos.xlsx")
data3= import("BD GP 7 (1).xlsx")
keep2= c(2,3)
data2=data2[,keep2]
keep3= c(2,5)
data3=data3[,keep3]
View(data3)
names(data2)[2]="edu_gdp"
names(data3)[2]="inter_gdp"
View(data2)
names(data2)[2]="noleerescrib_gdp"
names(data3)[2]="nointer_gdp"
allData=merge(noleerescrib,nointer)
allData=merge(noleerescrib,nointer)
allData=merge(noleerescrib_gdp,nointer_gdp)
allData=merge(data2,data3)
allData=merge(data,data2)
allData=merge(allData,data3)
View(allData)
allData=merge(data,data2)
View(allData)
allData=merge(allData,data3)
View(allData)
data="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos.xlsx?raw=true"
data= import(data)
data2= import("MiBaseDeDatos.xlsx")
data3= import("BD GP 7 (1).xlsx")
list(names(data), names(data2), names(data3))
keep1=c(2,3,4,5)
data=data[,keep1]
keep2= c(3)
data2=data2[,keep2]
keep3= c(5)
data3=data3[,keep3]
allData=merge(data,data2)
allData=merge(allData,data3)
View(allData)
data2= import("MiBaseDeDatos.xlsx")
data3= import("BD GP 7 (1).xlsx")
keep1=c(2,3,4,5)
data=data[,keep1]
data="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos.xlsx?raw=true"
data= import(data)
data2= import("MiBaseDeDatos.xlsx")
data3= import("BD GP 7 (1).xlsx")
list(names(data), names(data2), names(data3))
keep1=c(2,3,4,5)
data=data[,keep1]
keep2= c(2,3)
data2=data2[,keep2]
keep3= c(2,5)
data3=data3[,keep3]
allData=merge(data,data2)
allData=merge(allData,data3)
View(allData)
keep1=c(2,3,4,5)
data=data[,keep1]
data="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos.xlsx?raw=true"
data= import(data)
data2= import("MiBaseDeDatos.xlsx")
data3= import("BD GP 7 (1).xlsx")
list(names(data), names(data2), names(data3))
keep=c(2,5)
data=data[,keep]
data2=data2[,keep]
data3=data3[,keep]
allData=merge(data,data2)
allData=merge(allData,data3)
data="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos.xlsx?raw=true"
data= import(data)
data2= import("MiBaseDeDatos.xlsx")
data3= import("BD GP 7 (1).xlsx")
str(data2)
str(data3)
list(names(data), names(data2), names(data3))
keep=c(2,5)
data=data[,keep]
data2=data2[,keep]
data3=data3[,keep]
View(data2)
View(data3)
View(data)
allData=merge(data,data2)
allData=merge(allData,data3)
View(allData)
View(allData)
data="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos.xlsx?raw=true"
data= import(data)
data2= import("MiBaseDeDatos.xlsx")
data3= import("BD GP 7 (1).xlsx")
str(data2)
str(data3)
list(names(data), names(data2), names(data3))
keep=c(2,5)
data=data[,keep]
data2=data2[,keep]
data3=data3[,keep]
allData=merge(data,data2)
allData=merge(allData,data3)
View(allData)
View(allData)
View(allData)
data2="https://github.com/jazzz12/Trabajo-Grupal/blob/main/MiBaseDeDatos.xlsx?raw=true"
data2= import(data2)
data3= "https://github.com/jazzz12/Trabajo-Grupal/blob/main/BD%20GP%207%20(1).xlsx?raw=true"
data3= import(data3)
View(data3)
str(data2)
str(data3)
list(names(data), names(data2), names(data3))
data="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos.xlsx?raw=true"
data= import(data)
data2="https://github.com/jazzz12/Trabajo-Grupal/blob/main/MiBaseDeDatos.xlsx?raw=true"
data2= import(data2)
data3= "https://github.com/jazzz12/Trabajo-Grupal/blob/main/BD%20GP%207%20(1).xlsx?raw=true"
data3= import(data3)
list(names(data), names(data2), names(data3))
keep=c(2,5)
data=data[,keep]
data2=data2[,keep]
data3=data3[,keep]
allData=merge(data,data2)
allData=merge(allData,data3)
View(allData)
allData=merge(data,data2)
allData=merge(allData,data3)
View(allData)
View(allData)
View(allData)
library(rio)
allData=merge(data,data2)
allData=merge(allData,data3)
View(data)
View(data2)
View(data)
View(data2)
View(data3)
View(data)
View(data2)
data="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos.xlsx?raw=true"
data= import(data)
library(rio)
data2="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos%20(1)%20(1).xlsx?raw=true"
data2= import(data2)
data3= "https://github.com/jazzz12/Trabajo-Grupal/blob/main/BD%20GP%207%20(1).xlsx?raw=true"
data3= import(data3)
View(data2)
list(names(data), names(data2), names(data3))
keep=c(2,5)
data=data[,keep]
data2=data2[,keep]
data3=data3[,keep]
allData=merge(data,data2)
allData=merge(allData,data3)
View(allData)
View(data)
data="https://github.com/jazzz12/Trabajo-Grupal/blob/main/base_de_datos.xlsx?raw=true"
data= import(data)
keep1=c(2,3,4,5)
data=data[,keep1]
allData=merge(data,data2)
allData=merge(allData,data3)
View(allData)
str(allData)
library(readr)
allData[,-1]=lapply(allData[,-1], parse_number)
library(readr)
boxplot(allData[,-1])
boxplot(normalize(allData[,-1],method='standardize'))
library(BBmisc)
boxplot(normalize(allData[,-1],method='standardize'))
allData[,-1]=normalize(allData[,-1],method='standardize')
allData=allData[complete.cases(allData),]
#descriptivos:
summary(allData)
cor(allData[,-1])
allData$edu_gdp=-1*allData$edu_gdp
library(cluster)
g.dist = daisy(dataClus, metric="gower")
dataClus=allData[,-1]
row.names(dataClus)=allData$Distrito
View(dataClus)
library(cluster)
g.dist = daisy(dataClus, metric="gower")
library(factoextra)
fviz_nbclust(dataClus, pam,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F)
fviz_nbclust(dataClus, pam,diss=g.dist,method = "gap_stat",k.max = 5,verbose = F)
library(factoextra)
fviz_nbclust(dataClus, pam,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F)
###pam
set.seed(123)
## PARA JERARQUICO
fviz_nbclust(dataClus, hcut,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F,hc_func = "diana")
## PARA JERARQUICO
fviz_nbclust(dataClus, hcut,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F,hc_func = "diana")
###pam
set.seed(123)
grupos=4
res.pam=pam(g.dist,k = grupos,cluster.only = F)
dataClus$pam=res.pam$cluster
###agnes
res.agnes<- hcut(g.dist, k =grupos,hc_func='agnes',hc_method = "ward.D")
dataClus$agnes=res.agnes$cluster
### diana
res.diana <- hcut(g.dist, k = grupos,hc_func='diana')
dataClus$diana=res.diana$cluster
fviz_silhouette(res.pam)
fviz_silhouette(res.agnes)
fviz_silhouette(res.diana)
library(magrittr)
silPAM=data.frame(res.pam$silinfo$widths)
silPAM$country=row.names(silPAM)
poorPAM=silPAM[silPAM$sil_width<0,'country']%>%sort()
silAGNES=data.frame(res.agnes$silinfo$widths)
silAGNES$country=row.names(silAGNES)
poorAGNES=silAGNES[silAGNES$sil_width<0,'country']%>%sort()
silDIANA=data.frame(res.diana$silinfo$widths)
silDIANA$country=row.names(silDIANA)
poorDIANA=silDIANA[silDIANA$sil_width<0,'country']%>%sort()
###
library("qpcR")
install.packages("qpcR")
###
library("qpcR")
mal_Clus=as.data.frame(qpcR:::cbind.na(poorPAM, poorAGNES,poorDIANA))
mal_Clus
original=aggregate(.~ agnes, data=dataClus,mean)
original[order(original$InstiteducEnotrodist),]
dataClus$agnes=dplyr::recode(dataClus$agnes, `1` = 1, `3`=2,`4`=3,`2`=4)
proyeccion = cmdscale(g.dist, k=2,add = T) # k es la cantidad de dimensiones
dataClus$dim1 <- proyeccion$points[,1]
dataClus$dim2 <- proyeccion$points[,2]
base= ggplot(dataClus,aes(x=dim1, y=dim2,label=row.names(dataClus)))
base + geom_text(size=2, aes(color=as.factor(agnes)))  + labs(title = "AGNES")
library(magrittr)
silPAM=data.frame(res.pam$silinfo$widths)
silPAM$country=row.names(silPAM)
poorPAM=silPAM[silPAM$sil_width<0,'Distrito']%>%sort()
silAGNES=data.frame(res.agnes$silinfo$widths)
silAGNES$country=row.names(silAGNES)
poorAGNES=silAGNES[silAGNES$sil_width<0,'Distrito']%>%sort()
silDIANA=data.frame(res.diana$silinfo$widths)
silDIANA$country=row.names(silDIANA)
poorDIANA=silDIANA[silDIANA$sil_width<0,'Distrito']%>%sort()
###
library("qpcR")
mal_Clus=as.data.frame(qpcR:::cbind.na(poorPAM, poorAGNES,poorDIANA))
mal_Clus
library(magrittr)
silPAM=data.frame(res.pam$silinfo$widths)
silPAM$country=row.names(silPAM)
poorPAM=silPAM[silPAM$sil_width<0,'country']%>%sort()
silAGNES=data.frame(res.agnes$silinfo$widths)
silAGNES$country=row.names(silAGNES)
poorAGNES=silAGNES[silAGNES$sil_width<0,'country']%>%sort()
silDIANA=data.frame(res.diana$silinfo$widths)
silDIANA$country=row.names(silDIANA)
poorDIANA=silDIANA[silDIANA$sil_width<0,'country']%>%sort()
###
library("qpcR")
mal_Clus=as.data.frame(qpcR:::cbind.na(poorPAM, poorAGNES,poorDIANA))
mal_Clus
fviz_dend(res.agnes, cex = 0.7, horiz = T)
dontselect=c("Country","InstiteducEnotrodist")
select=setdiff(names(allData),dontselect)
theData=allData[,select] # sin los Scores ni nombre de país.
# esta es:
library(polycor)
install.packages("polycor")
# esta es:
library(polycor)
corMatrix=polycor::hetcor(theData)$correlations
library(ggcorrplot)
install.packages("ggcorrplot")
library(ggcorrplot)
ggcorrplot(corMatrix)
library(factoextra)
fviz_nbclust(dataClus, pam,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F)
